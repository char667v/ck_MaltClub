---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/tailwind.css";
import AgeVerification from "../components/AgeVerification.astro";
import "animate.css";

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon_apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{Astro.props.title}</title>
  </head>
  <body>
    <AgeVerification />

    <header>
      <Header />
    </header>

    <main>
      <slot />
    </main>

    <footer>
      <Footer />
    </footer>
  </body>
</html>

<script>
  // Fade ind
  import { animate, inView } from "motion";

  inView("#sektion2", () => {
    animate("#sektion2", { opacity: [0, 1] }, { duration: 2.5 });
  });

  inView("#sektion3", () => {
    animate("#sektion3", { opacity: [0, 1] }, { duration: 2.5 });
  });

  inView("#sektion4", () => {
    animate("#sektion4", { opacity: [0, 1] }, { duration: 2.5 });
  });

  inView("#sektion5", () => {
    animate("#sektion5", { opacity: [0, 1] }, { duration: 2.5 });
  });

  inView("#sektion6", () => {
    animate("#sektion6", { opacity: [0, 1] }, { duration: 2.5 });
  });

  inView("#sektion7", () => {
    animate("#sektion7", { opacity: [0, 1] }, { duration: 2.5 });
  });

  inView(".fade", () => {
    animate(".fade", { opacity: [0, 1] }, { duration: 2.5 });
  });

  // Cirkel maske animation
  window.addEventListener("load", () => {
    const circleMask = document.querySelector(".circle-mask");

    animate(circleMask, { r: ["0", "150%"] }, { duration: 2.8 });
  });

  // Fade ind og skaler op
  document.addEventListener("DOMContentLoaded", () => {
    const mainContents = document.querySelectorAll(".main-content");

    mainContents.forEach((mainContent) => {
      const children = Array.from(mainContent.children);

      children.forEach((child) => {
        inView(child, ({ target }) => {
          animate(
            target,
            {
              opacity: [0, 1],
              transform: ["translateY(50px) scale(0.8)", "translateY(0px) scale(1.0)"],
            },
            {
              duration: 0.8,
              easing: "ease-out",
            }
          );
        });
      });
    });
  });
</script>
